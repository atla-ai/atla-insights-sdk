# coding: utf-8

"""
    Atla Insights API

    Development documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from atla_insights.client._generated_client.models.get_traces_by_ids200_response_traces_inner_spans_inner_annotations_inner import GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner

class TestGetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner(unittest.TestCase):
    """GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner:
        """Test GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner`
        """
        model = GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner()
        if include_optional:
            return GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner(
                id = '',
                span_id = '',
                failure_mode = '',
                atla_critique = ''
            )
        else:
            return GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner(
                id = '',
                span_id = '',
                failure_mode = '',
                atla_critique = '',
        )
        """

    def testGetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner(self):
        """Test GetTracesByIds200ResponseTracesInnerSpansInnerAnnotationsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
