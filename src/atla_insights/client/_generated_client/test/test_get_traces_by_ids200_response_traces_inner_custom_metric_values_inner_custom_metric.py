# coding: utf-8

"""
    Atla Insights API

    Development documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from atla_insights.client._generated_client.models.get_traces_by_ids200_response_traces_inner_custom_metric_values_inner_custom_metric import GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric

class TestGetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric(unittest.TestCase):
    """GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric:
        """Test GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric`
        """
        model = GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric()
        if include_optional:
            return GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric(
                id = '',
                name = '',
                data_type = 'BOOLEAN'
            )
        else:
            return GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric(
                id = '',
                name = '',
                data_type = 'BOOLEAN',
        )
        """

    def testGetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric(self):
        """Test GetTracesByIds200ResponseTracesInnerCustomMetricValuesInnerCustomMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
